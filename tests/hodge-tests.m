AttachSpec("QCMod.spec");
import "misc.m": function_field;

load "data/quartic-test-data.m";
load "data/short-coleman-test-data.m";

for i := 1 to #test_data_list do
  test := test_data_list[i];
  Q := test`Q; g := test`g; r := test`r; W0 := test`W0; bpt := test`bpt;
  basis := short_coleman_data_list[i]`basis;
  printf "Testing Hodge data for Q = %o...\n", Q;
  for i in [1 .. #test`corresp] do
    Z := test`corresp[i];
    hodge_prec := test`hodge_prec[i];
    eta, betafil, gammafil, hodge_loss := HodgeData(Q, g, W0, basis, Z, bpt : r:=r, prec:=hodge_prec);
    assert eta eq test`eta[i];
    assert betafil eq test`betafil[i];
    assert gammafil eq test`gammafil[i];
    assert hodge_loss eq test`hodge_loss[i];
    printf "Test passed for correspondence %o.\n", i;
  end for;
end for;

load "data/NF-example-coleman-data.m";
Q := data`Q; g := data`g; r := data`r; W0 := data`W0; basis := data`basis;
bQ_xy := [-1/2*u, -1/2];
FF<y> := function_field(Q);
x := BaseRing(FF).1;
bpt := CommonZeros([x-bQ_xy[1], y-bQ_xy[2]])[1]; // Base point as place on the function field
correspondences := [
  Matrix(RationalField(), 6, 6,
  [ 0, -1, 3, 0, -2, 1,
    0, -1, 1, 2, 0, 2,
    0, -1, 1, -1, -2, 0,
    0, 0, -1, 0, 0, 0,
    0, 0, -1, -1, -1, -1,
    1, 1, 0, 3, 1, 1 ]),
  Matrix(RationalField(), 6, 6,
    [ -1, 0, 1, 0, -1, 0,
      2, 1, -3, 1, 0, -2,
      0, 1, 0, 0, 2, 0,
      0, 1, 0, -1, 2, 0,
      -1, 0, 2, 0, 1, 1,
      0, -2, 0, 1, -3, 0 ])
];
hodge_prec := 5;
eta_stored := [
  [
    1/6246859271293787331390085499684315407553765984087735367068775586947385777776857218902155122428084224*(362643334862790531334467569333364738576300471815299903416173184812022873457851981200067853717493840985*u - 86897351294132406382260724543943956252823543262679087412209554731695580253156927013913606114850108193),
    1/32796011174292383489797948873342655889657271416460610677111071831473775333328500399236314392747442176*(-5494537034425159092742693967575164296498237350259127690188438253876525673770050325215224067111925075823*u + 501973285320530734026511300874042179231383224410411190818144262521619783703813475852780574496431505891),
    1/131184044697169533959191795493370623558629085665842442708444287325895101333314001596945257570989768704*(30620890309461345014009782803786916151304772481690245093049650042041616371728686832024230188670459329297*u + 17299430949878585130488275297933167758678340739684434166730606423830888748576865691140053377609239246239)
  ], [
    1/21864007449528255659865299248895103926438180944307073784740714554315850222219000266157542928498294784*(-396340334939925213521976705663347494589479781419986210971798113576934046320924219462458026166117137532*u - 198393914508091219570709439323722223381119572421293320353652731724647470965524104239820839810093795407),
    1/114786039110023342214292821056699295613800449957612137369888751410158213666649751397327100374616047616*(6734276607121950569876808614679406383021892649003102366022082182809458908777086369677533062370313289068*u + 3499726228202436177160720942297840437796765211187679609089143816827920852616897029183268499461887376789),
    1/459144156440093368857171284226797182455201799830448549479555005640632854666599005589308401498464190464*(-40352756255511190584142367745578832853084270693985693487072088044839164019739582992420105633522252183956*u - 29427210805620769572693756074195711517111746660878829678863352131009884009326737101855105342763899401799)
  ]
];
betafil_stored := [
  [
    1/248921283511988753920800478174969838588380417021941868715738469902767567602004134421765870201737216*(9972897014695849016782839116607897966134333862190953543838842087654202522822312545403714784192276005153*u + 17773073459326820066463283208959618360745269836306701764262553713082893359069903408508702671825350022433),
    1/497842567023977507841600956349939677176760834043883737431476939805535135204008268843531740403474432*(-2059279017376851259563891150376536932620695360845876486622034231551476825622102256182345651030232012787*u - 7799768970199135843365857760975014524313359642660344345241229241174452449027865884835773275735903328241),
    1/248921283511988753920800478174969838588380417021941868715738469902767567602004134421765870201737216*(-441328772754308273331944405810977435478451610891989413902584066904986682534561217794874692477953668293*u - 150982403663351710360657334279856507371769264087182993563342564856461174838812815070335257806118296788)
  ], [
    1/248921283511988753920800478174969838588380417021941868715738469902767567602004134421765870201737216*(8570899346743982078961863655573617864786984351164541296245688380324317612282330622473714872077000816758*u + 6756528867267873105842686638771043880587856533335126385796739253462131342171964145643200627813993201323),
    1/497842567023977507841600956349939677176760834043883737431476939805535135204008268843531740403474432*(-3415160437830770449642802837640948316369430135632971306723099577475127834326290864633787012162633807900*u - 3803116221119196585161810525958993380275793078916692553195497500241983409136066226844330956175021875995),
    1/248921283511988753920800478174969838588380417021941868715738469902767567602004134421765870201737216*(-133827923993036006986109423844481660388819356999933289328969403319031361860404005176038504451007033572*u + 84093659368315216000555039759854236252694799200163650696660003892743338534864589960144007623685887703)
  ]
];
gammafil_stored := [
  [
    1/8171682194594530475054299992775328824010732518642363528071367341962792034977792*(57505844225627286398267980308869750857037978439968678022354719268486366422060622*u + 61678129021916020771374724752263352319442287805429451934877251194494830407577953)*x^4 + 1/24515046583783591425162899978325986472032197555927090584214102025888376104933376*(-586241416760602524670520567848141513902503172657244292896363987246895095110607072*u - 645607076032910978057238658270221280708925089142205859363318247481697986554031173)*x^3 + 1/720183911604902823876301037228676720291924857430439751418970566830100066710366402857416755837717718240806711709052975656852250165248*(-65059381630116338793405462668068995999667702563805816766167929955777741602068661699530113634141013281632780993379250297794800152147836*u + 203273193047959668924110397396164430529481401722007582040836359722260566846041857608750247052569351141907817066707720000786729294979061)*x^2 + 1/1080275867407354235814451555843015080437887286145659627128455850245150100065549604286125133756576577361210067563579463485278375247872*(1069190260296564174077935684963879006313622203245770605933393202893710224971884154562392918369145100118177999995481313503053466292607138*u + 636490917231363233058036522826913773753300175785771714679327021793687314587134505496758817197531886796709567699896719302932773157311177)*x + 1/8642206939258833886515612446744120643503098289165277017027646801961200800524396834289001070052612618889680540508635707882227001982976*(1654493506315014367053925127553851465923046336133606954837369319597598543533457933183406077617665695304573731143328349484266848386633228*u + 568082169020625019280477840789613699864573309276222596600476177835655920871870395162190717447693603342284890903236025112961602666825513),
    1/4085841097297265237527149996387664412005366259321181764035683670981396017488896*(-22002418279655656790769961276110684635186528734986923788497957707193378972297451*u + 5416723216694054604764949557526333603288384683432140153203932764253656693813544)*x^3 + 1/514815978259455419928420899544845715912676148674468902268496142543655898203600896*(5806010865942405887005543595820303538029841294509196995919172244082377210969265431*u + 32570407634885152828224946251347115435145754307609569847151606325534451821154251438)*x^2 + 1/11023223136809737100147464855540970208549870266792445174780161737195409184342342900878827895475271197563368036363055749849779339264*(1253406022525715616674452838024555512736199272023305482554816101618079817674605466589359790883537134439495099088927756958777742232253*u - 11190838769245565951624780134779444859734523924090375284642804526712499694138699159002069449913657382298433815586347994477918436345640)*x + 1/1080275867407354235814451555843015080437887286145659627128455850245150100065549604286125133756576577361210067563579463485278375247872*(-45728421565538771741212971168560089387595801747084186734112846243920406665576414781988431745366892740117043498145674348689124988841025*u + 928336626665250412583294664106807332126179645987176723824945864659381025792455051062465850171207461368490076141693266534000061549674147),
    1/2042920548648632618763574998193832206002683129660590882017841835490698008744448*(84942436204390064357165160458277377085642737681881439291925124378287989462810819*u + 13996912548802931645419529858864988443506748558577605860919286252459684002537486)*x^2 + 1/514815978259455419928420899544845715912676148674468902268496142543655898203600896*(-23209971737433058995258434891289003817408953229395513240005738790600998488829540471*u + 5134872987794096134471988715152033902674359456218938229325733336381820851180537301)*x + 1/720183911604902823876301037228676720291924857430439751418970566830100066710366402857416755837717718240806711709052975656852250165248*(-176265154050302209520501098275132053571752197570562208422697356026725311954874030628197807352066190277189730062574171664381691649994091*u - 46488614420628074916514540257405396394097647210683226941487777754366341688487336453876938901674125251940015981367784765576754327693994),
    1/8171682194594530475054299992775328824010732518642363528071367341962792034977792*(-77043351919057994534766305830603952833433291462761480952512755165205549984627679*u - 63929345916041406417136379276325571989657804159035807281446312993227782625768074)*x + 1/514815978259455419928420899544845715912676148674468902268496142543655898203600896*(9412430965116188894623160278062035488906448396117916147444915947653336271800876697*u - 934820355376920927027456957849377162700407142818101978130048057505330937195212880)
  ], [
    1/8171682194594530475054299992775328824010732518642363528071367341962792034977792*(19313229791122080573708802720923633134626694472756586461573196252720499415977343*u - 11276802686927269510028758171567474581665845858603899173257103341057606949350248)*x^4 + 1/8171682194594530475054299992775328824010732518642363528071367341962792034977792*(-73335575602450340492959853414602730093300916563448608371169190216076751710301281*u + 46747023764893914883841728319991162651673382606231420188933200537529416391980460)*x^3 + 1/720183911604902823876301037228676720291924857430439751418970566830100066710366402857416755837717718240806711709052975656852250165248*(91463067092141103859680312692246225939218170204720532901256262637950893591072716291836760823730225217593066291494282167099684152785377*u + 81160461526965510243876150227711787853327106073869467443486025664319572185095846217603335983809057735143736413530541853290263061280586)*x^2 + 1/1080275867407354235814451555843015080437887286145659627128455850245150100065549604286125133756576577361210067563579463485278375247872*(165558764982499230167321467424285858613159143427884267696721785030758917432175382518278231579095911662953595236129058051143210204619035*u - 100458273592913717368028002680003529988417429822061836467058756248463136733568079358901899260418116153616659810579034133194364281926404)*x + 1/8642206939258833886515612446744120643503098289165277017027646801961200800524396834289001070052612618889680540508635707882227001982976*(84389336265932363947765366532665180149243041858359200215160431972490244847268438048752284264072234320943514481308517627852199185961637*u + 86310791479775845920538785689086590751049179405498690540719162439217783573144791234353321239629278282920604100761883808734769166752098),
    1/583691585328180748218164285198237773143623751331597394862240524425913716784128*(1941099176389908408593525643494072008316018338961357813237931648880021995519195*u + 2753409717909632856080106272048013029359627738074885041207705712114731547302003)*x^3 + 1/3603711847816187939498946296813920011388733040721282315879472997805591287425206272*(106458124170109023849623903115160856642219555347730106024779270823473605850188712247*u + 36211683315328012902691613538557593926984684359979985636765849029871556465150534284)*x^2 + 1/11023223136809737100147464855540970208549870266792445174780161737195409184342342900878827895475271197563368036363055749849779339264*(-3579467657866032800964410506671047639454499817885878828971890385132439148979712951967614006335216155568344841327407726828711736742883*u - 2910126763204011498489993801294092084545738645265544980037206881886858277127583403031333330326434320855309039020481333266412748246677)*x + 1/1080275867407354235814451555843015080437887286145659627128455850245150100065549604286125133756576577361210067563579463485278375247872*(243668608523761455001109065205789100548270205496273863254056450101864531089425204199177105825033953335978649840561057005154681391924374*u + 394923777758523093862356943354238783150991968139111819101510590243793577974368061350615089942497210650462076827143221076621957113241059),
    1/4085841097297265237527149996387664412005366259321181764035683670981396017488896*(-27372445904654150648803482012035085992856522155872847275366113505379520888528283*u - 90159681324378034378718157815002258831419095906944632862414562781969232661315361)*x^2 + 1/1801855923908093969749473148406960005694366520360641157939736498902795643712603136*(19931375324934997408099163965313261327196922356653207793130773044356971673612949115*u + 39155592499562047692097583868595693502451692878804082460655004153384301265131557281)*x + 1/240061303868300941292100345742892240097308285810146583806323522276700022236788800952472251945905906080268903903017658552284083388416*(-9791741788600050720405505755116862943878581713627176098860380336526582765814438986907835802541858648067401461617239002753811479593899*u + 10331799364018641943217186467356785652590279637533570983876269212538545003190645326306145465306305963766036963801161526485095639683333),
    1/8171682194594530475054299992775328824010732518642363528071367341962792034977792*(3266304753602317667554256600313392948611877486715097093844608592440300880754809*u + 34391866636292500995172557584235756269248777116716165865510132864795004659592151)*x + 1/3603711847816187939498946296813920011388733040721282315879472997805591287425206272*(-12871222798597158029110234039890468505538783141293776250750467499795195612645689329*u - 38735608029421804551478692088877471578715998551747759242693843867895018899550003510)
  ]
];
hodge_loss_stored := [-2, -2];
printf "Testing Hodge data for Q = %o...\n", Q;
for i := 1 to #correspondences do
  Z := correspondences[i];
  eta, betafil, gammafil, hodge_loss := HodgeData(Q, g, W0, basis, Z, bpt : r:=r, prec:=hodge_prec);
  assert Eltseq(eta) eq eta_stored[i];
  assert Eltseq(betafil) eq betafil_stored[i];
  assert Eltseq(gammafil) eq gammafil_stored[i];
  assert hodge_loss eq hodge_loss_stored[i];
  printf "Test passed for correspondence %o.\n", i;
end for;

printf "Hodge data tests completed.\n";
